{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\etet113\\\\Desktop\\\\TestReact\\\\MediconcenTest\\\\App.js\";\nimport React from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport * as Permissions from 'expo-permissions';\nimport CalendarStrip from 'react-native-calendar-strip';\nimport Moment from 'moment';\nvar mEmail = '';\nvar mPassword = '';\nvar errorMsg = '';\nvar Stack = createStackNavigator();\nexport default App;\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Registration\",\n    component: RegistrationScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"email\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('email', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('password', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.touchable,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"LogIn\",\n    onPress: function onPress() {\n      fetch('http://192.168.1.9:3000/users/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: mEmail,\n          password: mPassword\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        try {\n          console.log(responseJson.isPass);\n          navigation.navigate('Details');\n        } catch (err) {\n          console.log('error signing up: ', err);\n        }\n      }).catch(function (error) {\n        console.error(error);\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  })), React.createElement(Button, {\n    title: \"Registration\",\n    onPress: function onPress() {\n      navigation.navigate('Registration');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RegistrationScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"email\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('email', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('password', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"clinic_name\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('clinic_name', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"phone_number\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('phone_number', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"address\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(val) {\n      return _onChangeText('address', val);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"LogIn\",\n    onPress: function onPress() {\n      navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar DATA = [{\n  id: \"bd7acbea-c1b1-46c2-aed5-3ad53abb28ba\",\n  title: \"First Item\"\n}, {\n  id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f63\",\n  title: \"Second Item\"\n}, {\n  id: \"58694a0f-3da1-471f-bd96-145571e29d72\",\n  title: \"Third Item\"\n}];\n\nvar Item = function Item(_ref3) {\n  var item = _ref3.item,\n      onPress = _ref3.onPress,\n      style = _ref3.style;\n  return React.createElement(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.item, style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 1\n    }\n  }, item.title));\n};\n\nfunction DetailsScreen(_ref4) {\n  var navigation = _ref4.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var renderItem = function renderItem(_ref5) {\n    var item = _ref5.item;\n    var backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    styles: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, React.createElement(CalendarStrip, {\n    scrollable: true,\n    style: {\n      height: 100,\n      paddingTop: 20,\n      paddingBottom: 10\n    },\n    calendarColor: '#3343CE',\n    calendarHeaderStyle: {\n      color: 'white'\n    },\n    dateNumberStyle: {\n      color: 'white'\n    },\n    dateNameStyle: {\n      color: 'white'\n    },\n    iconContainer: {\n      flex: 0.1\n    },\n    onDateSelected: function onDateSelected(date) {\n      console.log(date);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginTop: StatusBar.currentHeight + 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [{\n      width: \"50%\",\n      backgroundColor: \"red\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      var date = new Date().getDate();\n      var month = new Date().getMonth() + 1;\n      var year = new Date().getFullYear();\n      console.log(new Date());\n    },\n    title: \"Day\",\n    color: \"#90A4AE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [{\n      width: \"50%\",\n      backgroundColor: \"red\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      console.log(new Date().getVarDate);\n    },\n    title: \"Button Three\",\n    color: \"#90A4AE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }))), React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extraData: selectedId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction _onChangeText(key, val) {\n  if (key == 'email') {\n    mEmail = val;\n  }\n\n  if (key == 'password') {\n    mPassword = val;\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    flexGrow: 1\n  },\n  input: {\n    backgroundColor: '#fa8072',\n    width: '80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 36\n  },\n  touchable: {\n    marginBottom: 36\n  },\n  errorColor: {\n    color: 'red'\n  },\n  row: {\n    backgroundColor: '#fa8072',\n    marginTop: StatusBar.currentHeight + 20,\n    flexDirection: 'row'\n  },\n  list: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight || 0\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/etet113/Desktop/TestReact/MediconcenTest/App.js"],"names":["React","NavigationContainer","createStackNavigator","useState","Permissions","CalendarStrip","Moment","mEmail","mPassword","errorMsg","Stack","App","HomeScreen","RegistrationScreen","DetailsScreen","navigation","styles","container","input","val","onChangeText","touchable","fetch","method","headers","Accept","body","JSON","stringify","email","password","then","response","json","responseJson","console","log","isPass","navigate","err","catch","error","goBack","DATA","id","title","Item","item","onPress","style","selectedId","setSelectedId","renderItem","backgroundColor","height","paddingTop","paddingBottom","color","flex","date","flexDirection","marginTop","StatusBar","currentHeight","width","Date","getDate","month","getMonth","year","getFullYear","getVarDate","key","StyleSheet","create","alignItems","justifyContent","flexGrow","borderColor","borderWidth","marginBottom","errorColor","row","list","padding","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["// import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {\n  View,\n  Button,\n  TextInput,\n  StyleSheet,\n  Text,\n    StatusBar,\n    SafeAreaView, FlatList,TouchableOpacity,\n} from 'react-native';\nimport { useState } from 'react';\nimport * as Permissions from 'expo-permissions';\nimport CalendarStrip from 'react-native-calendar-strip';\nimport Moment from 'moment';\n\nlet mEmail = '';\nlet mPassword = '';\nvar errorMsg ='';\nconst Stack = createStackNavigator();\n\nexport default App;\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator headerMode=\"none\" >\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nfunction HomeScreen({ navigation }) {\n\n  return (\n    <View style={styles.container}>\n\n      <TextInput\n        style={styles.input}\n        placeholder='email'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('email', val)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder='password'\n        secureTextEntry={true}\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('password', val)}\n      />\n      <View style={styles.touchable}>\n      <Button\n        title='LogIn'\n        onPress={() => {\n\n            fetch('http://192.168.1.9:3000/users/login', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Accept':       'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body:JSON.stringify({\n                    email: mEmail,\n                    password: mPassword,\n                }),\n            })\n            .then((response) => response.json())\n            .then((responseJson) => {\n                try {\n                    console.log(responseJson.isPass)\n                    // if(responseJson.isPass == true){\n                        navigation.navigate('Details')\n                    // }\n                } catch (err) {\n                    console.log('error signing up: ', err)\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n          }\n        }\n      />\n      </View>\n      <Button\n        title='Registration'\n        onPress={() => {\n            navigation.navigate('Registration')\n          }\n        }/>\n\n    </View>\n  );\n}\n\nfunction RegistrationScreen({ navigation }) {\n  return (\n    // email: '', password: '', clinic_name: '', phone_number: '',address: ''\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder='email'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('email', val)}/>\n      <TextInput\n        style={styles.input}\n        placeholder='password'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('password', val)}/>\n      <TextInput\n        style={styles.input}\n        placeholder='clinic_name'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('clinic_name', val)}/>\n      <TextInput\n        style={styles.input}\n        placeholder='phone_number'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('phone_number', val)}/>\n      <TextInput\n        style={styles.input}\n        placeholder='address'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => onChangeText('address', val)}/>\n        <Button\n          title='LogIn'\n          onPress={() => {\n              navigation.goBack()\n            }\n          }\n        />\n    </View>\n  );\n}\n\nconst DATA = [\n    {\n        id: \"bd7acbea-c1b1-46c2-aed5-3ad53abb28ba\",\n        title: \"First Item\",\n    },\n    {\n        id: \"3ac68afc-c605-48d3-a4f8-fbd91aa97f63\",\n        title: \"Second Item\",\n    },\n    {\n        id: \"58694a0f-3da1-471f-bd96-145571e29d72\",\n        title: \"Third Item\",\n    },\n];\n\nconst Item = ({ item, onPress, style }) => (\n    <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n<Text style={styles.title}>{item.title}</Text>\n    </TouchableOpacity>\n);\n\nfunction DetailsScreen({ navigation }) {\n    const [selectedId, setSelectedId] = useState(null);\n\n    const renderItem = ({ item }) => {\n        const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n\n        return (\n            <Item\n            item={item}\n            onPress={() => setSelectedId(item.id)}\n            style={{ backgroundColor }}/>\n    );\n    };\n\n    return (\n    <View styles={styles.container}>\n        <CalendarStrip\n            scrollable\n            style={{height:100, paddingTop: 20, paddingBottom: 10}}\n            calendarColor={'#3343CE'}\n            calendarHeaderStyle={{color: 'white'}}\n            dateNumberStyle={{color: 'white'}}\n            dateNameStyle={{color: 'white'}}\n            iconContainer={{flex: 0.1}}\n            onDateSelected ={ (date) =>{\n                console.log(date)\n            }}\n            />\n        <View style = {{flexDirection: 'row',marginTop: StatusBar.currentHeight+ 20}}>\n        <View style={[{ width: \"50%\", backgroundColor: \"red\" }]}>\n        <Button\n        onPress={()=>{\n            var date = new Date().getDate();\n            var month = new Date().getMonth() + 1;\n            var year = new Date().getFullYear();\n\n\n            console.log(new Date())\n         }}\n        title=\"Day\"\n        color=\"#90A4AE\"\n        />\n        </View>\n        <View style={[{ width: \"50%\", backgroundColor: \"red\" }]}>\n        <Button\n        onPress={()=>{\n            console.log(new Date().getVarDate)\n        }}\n        title=\"Button Three\"\n        color=\"#90A4AE\"\n        />\n        </View>\n        </View>\n            <SafeAreaView >\n                <FlatList\n            data={DATA}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n            extraData={selectedId}\n            />\n            </SafeAreaView>\n    </View>\n\n  );\n}\n\n\nfunction onChangeText(key, val){\n  if (key == 'email') {\n    mEmail = val\n  }\n  if (key == 'password') {\n    mPassword = val\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    flexGrow: 1\n  },\n  input:{\n    backgroundColor:'#fa8072',\n    width:'80%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 36\n  },\n  touchable:{\n    marginBottom: 36\n  },\n  errorColor:{\n    color: 'red'\n  },\n  row:{\n      // alignItems: 'stretch',\n      backgroundColor:'#fa8072',\n      marginTop: StatusBar.currentHeight+ 20,\n      // alignContent:'stretch' ,\n      flexDirection: 'row',\n  },\n\n    list: {\n        flex: 1,\n        marginTop: StatusBar.currentHeight || 0,\n    },\n    item: {\n        padding: 20,\n        marginVertical: 8,\n        marginHorizontal: 16,\n    },\n\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}